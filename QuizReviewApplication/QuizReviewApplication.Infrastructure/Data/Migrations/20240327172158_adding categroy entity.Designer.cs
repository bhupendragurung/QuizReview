// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using QuizReviewApplication.Infrastructure.Data;

#nullable disable

namespace QuizReviewApplication.Infrastructure.Data.Migrations
{
    [DbContext(typeof(QuizReviewDbContext))]
    [Migration("20240327172158_adding categroy entity")]
    partial class addingcategroyentity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("QuizReviewApplication.Domain.Entities.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("QuizReviewApplication.Domain.Entities.Question", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<int>("QuestionLevel")
                        .HasColumnType("integer");

                    b.Property<int>("SkillLevel")
                        .HasColumnType("integer");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Questions");
                });

            modelBuilder.Entity("QuizReviewApplication.Domain.Entities.QuestionCategory", b =>
                {
                    b.Property<Guid>("QuestionId")
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.HasKey("QuestionId", "CategoryId");

                    b.HasIndex("CategoryId");

                    b.ToTable("QuestionCategories");
                });

            modelBuilder.Entity("QuizReviewApplication.Domain.Entities.QuestionCategory", b =>
                {
                    b.HasOne("QuizReviewApplication.Domain.Entities.Category", "Category")
                        .WithMany("QuestionCategories")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("QuizReviewApplication.Domain.Entities.Question", "Question")
                        .WithMany("QuestionCategories")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("QuizReviewApplication.Domain.Entities.Category", b =>
                {
                    b.Navigation("QuestionCategories");
                });

            modelBuilder.Entity("QuizReviewApplication.Domain.Entities.Question", b =>
                {
                    b.Navigation("QuestionCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
